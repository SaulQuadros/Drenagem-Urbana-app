#!/usr/bin/env python
# coding: utf-8

# In[ ]:


import streamlit as st
from docx import Document
from docx.shared import Pt, Cm
from docx.enum.text import WD_PARAGRAPH_ALIGNMENT

# T√≠tulo no sidebar
st.sidebar.title("Drenagem Urbana")
menu = st.sidebar.radio("C√°lculos", 
                          ["Caracter√≠sticas - Bacia Hidrogr√°fica Contribui√ß√£o", 
                           "Microdrenagem - M√©todo Racional"])

if menu == "Caracter√≠sticas - Bacia Hidrogr√°fica Contribui√ß√£o":
    st.title('Calculadora de Par√¢metros de Bacia Hidrogr√°fica')
    
    st.sidebar.header('Insira os dados da bacia')
    # Inputs com padroniza√ß√£o das unidades
    area_km2 = st.sidebar.number_input('√Årea da Bacia (km¬≤)', min_value=10.0, format="%.2f")
    perimetro_km = st.sidebar.number_input('Per√≠metro da Bacia (km)', min_value=20.0, format="%.2f")
    comprimento_curso_principal_km = st.sidebar.number_input('Comprimento do Curso Principal (km)', min_value=2.0, format="%.2f")
    comprimento_retalinea_km = st.sidebar.number_input('Comprimento em Linha Reta (km)', min_value=1.5, format="%.2f")
    comprimento_total_cursos_agua_km = st.sidebar.number_input("Comprimento Total dos Cursos d'√Ågua (km)", min_value=4.0, format="%.2f")
    desnivel_m = st.sidebar.number_input('Desn√≠vel da Bacia (m)', min_value=10.0, format="%.2f")
    
    # C√°lculos dos par√¢metros
    kf = area_km2 / (comprimento_curso_principal_km ** 2)
    kc = 0.28 * perimetro_km / (area_km2 ** 0.5)
    dd = comprimento_total_cursos_agua_km / area_km2
    lm = area_km2 / (4 * comprimento_total_cursos_agua_km)
    sc = comprimento_curso_principal_km / comprimento_retalinea_km
    dc = (desnivel_m / (comprimento_curso_principal_km * 1000)) * 100
    
    # Defini√ß√£o dos resultados para itera√ß√£o
    resultados = [
        (
            "Coeficiente de Forma (Kf)",
            kf,
            "quanto mais pr√≥ximo de 1, mais arredondada √© a bacia, indicando picos de vaz√µes mais elevados e maior tend√™ncia para enchentes r√°pidas, sendo o oposto para valores que se aproximam de 0."
        ),
        (
            "Coeficiente de Compacidade (Kc)",
            kc,
            "quanto mais pr√≥ximo de 1, mais circular √© o formato da bacia e favorece o escoamento com altos picos de vaz√£o, sendo a bacia mais sujeita a inunda√ß√µes r√°pidas, sendo o oposto para valores que se afastam de 1."
        ),
        (
            "Densidade de Drenagem (Dd)",
            dd,
            "valores maiores que 1 indicam maior rapidez no escoamento superficial e menor infiltra√ß√£o, com maior risco de enchentes, e o inverso para valores menores que 1."
        ),
        (
            "Extens√£o M√©dia do Escoamento (lm)",
            lm,
            "valores entre 100m e 250m indicam uma bacia com drenagem moderada, com equil√≠brio entre infiltra√ß√£o e escoamento superficial, contudo, abaixo de 100 m, o escoamento superficial tende a ser r√°pido com pico de vaz√µes elevados, e acima de 250 m o inverso."
        ),
        (
            "√çndice de Sinuosidade (Sc)",
            sc,
            "valores pr√≥ximos de 1 indicam canais mais retos e maior efici√™ncia de drenagem, portanto, quanto maior o valor maior a sinuosidade e com isso, maior risco de enchentes."
        ),
        (
            "Declividade do Curso D'√°gua Principal (Dc)",
            dc,
            "valores abaixo de 1% indicam maior risco de enchentes, pois a drenagem √© demorada, sendo rios de plan√≠cies, e acima de 5% indicam rios com corredeiras e elevada velocidade de escoamento."
        )
    ]
    
    st.header('Resultados dos Par√¢metros da Bacia')
    st.markdown(f'''
    - **Coeficiente de Forma (Kf)**: {kf:.3f}  
      **Interpreta√ß√£o**: quanto mais pr√≥ximo de 1, mais arredondada √© a bacia, indicando picos de vaz√µes mais elevados e maior 
      tend√™ncia para enchentes r√°pidas, sendo o oposto para valores que se aproximam de 0.
    
    - **Coeficiente de Compacidade (Kc)**: {kc:.3f}  
      **Interpreta√ß√£o**: quanto mais pr√≥ximo de 1, mais circular √© o formato da bacia e favorece o escoamento com altos picos de vaz√£o, 
      sendo a bacia mais sujeita a inunda√ß√µes r√°pidas, sendo o oposto para valores que se afastam de 1.
    
    - **Densidade de Drenagem (Dd)**: {dd:.3f} km/km¬≤  
      **Interpreta√ß√£o**: valores maiores que 1 indicam maior rapidez no escoamento superficial e menor infiltra√ß√£o, com maior risco de 
      enchentes, e o inverso para valores menores que 1.
    
    - **Extens√£o M√©dia do Escoamento (lm)**: {lm:.3f} km
      **Interpreta√ß√£o**: valores entre 100m e 250m indicam uma bacia com drenagem moderada, com equil√≠brio entre infiltra√ß√£o e escoamento 
      superficial, contudo, abaixo de 100 m, o escoamento superficial tende a ser r√°pido com pico de vaz√µes elevados, e acima de 250 m 
      o inverso.
    
    - **√çndice de Sinuosidade (Sc)**: {sc:.3f}  
      **Interpreta√ß√£o**: valores pr√≥ximos de 1 indicam canais mais retos e maior efici√™ncia de drenagem, portanto, quanto maior o valor 
      maior a sinuosidade e com isso, maior risco de enchentes.
    
    - **Declividade do Curso D'√°gua Principal (Dc)**: {dc:.3f}%  
      **Interpreta√ß√£o**: valores abaixo de 1% indicam maior risco de enchentes, pois a drenagem √© demorada, sendo rios de plan√≠cies, 
      e acima de 5% indicam rios com corredeiras e elevada velocidade de escoamento. 
    ''')
    
    # Gera√ß√£o do documento Word (mesma formata√ß√£o j√° existente)
    if st.button('üìÑ Gerar Relat√≥rio Word - Drenagem Urbana'):
        doc = Document()
    
        sec = doc.sections[0]
        sec.top_margin = Cm(2.0)
        sec.bottom_margin = Cm(2.0)
        sec.left_margin = Cm(2.5)
        sec.right_margin = Cm(2.5)
    
        titulo = doc.add_heading('Relat√≥rio de Par√¢metros da Bacia Hidrogr√°fica', 0)
        titulo.alignment = WD_PARAGRAPH_ALIGNMENT.CENTER
        titulo.runs[0].font.size = Pt(16)
        titulo.runs[0].bold = True
        titulo.runs[0].font.name = 'Aptos'
    
        doc.add_paragraph()
    
        for nome, valor, interpretacao in resultados:
            p_param = doc.add_paragraph()
            run_param = p_param.add_run(f"{nome}: ")
            run_param.bold = True
            run_param.font.size = Pt(11)
            run_param.font.name = 'Aptos'
            run_valor = p_param.add_run(f"{valor:.3f}")
            run_valor.font.size = Pt(11)
            run_valor.font.name = 'Aptos'
            p_param.alignment = WD_PARAGRAPH_ALIGNMENT.LEFT
            p_param.paragraph_format.space_after = Pt(6)
            
            p_interp = doc.add_paragraph()
            run_interp_label = p_interp.add_run("Interpreta√ß√£o: ")
            run_interp_label.bold = True
            run_interp_label.font.size = Pt(11)
            run_interp_label.font.name = 'Aptos'
            run_interp_text = p_interp.add_run(interpretacao)
            run_interp_text.font.size = Pt(11)
            run_interp_text.font.name = 'Aptos'
            p_interp.alignment = WD_PARAGRAPH_ALIGNMENT.JUSTIFY
            p_interp.paragraph_format.space_after = Pt(12)
    
        doc.save("relatorio_bacia.docx")
    
        with open("relatorio_bacia.docx", "rb") as f:
            st.download_button("‚¨áÔ∏è Baixar relat√≥rio", f, file_name="relatorio_bacia.docx")

elif menu == "Microdrenagem - M√©todo Racional":
    st.title("Microdrenagem - M√©todo Racional")
    
    st.markdown("### Escolha do Modelo de Tempo de Concentra√ß√£o")
    # Sele√ß√£o do modelo
    modelo_tc = st.selectbox("Selecione o modelo para o c√°lculo do tempo de concentra√ß√£o:",
                             ["Kirpich", "Kirpich Modificado", "Van Te Chow", "Giandotti", "Piking", "USACE", "DNOS", "NRCS (SCS)"])
    
    # Inputs para o modelo escolhido ‚Äì para este exemplo, implementaremos a f√≥rmula de Kirpich.
    if modelo_tc == "Kirpich":
        st.markdown("#### Par√¢metros para a f√≥rmula de Kirpich")
        L_m = st.number_input("Comprimento do percurso de escoamento (m)", min_value=1.0, value=500.0, step=1.0)
        S_percent = st.number_input("Declividade (%)", min_value=0.1, value=2.0, step=0.1)
        # Converte a declividade de % para decimal
        S = S_percent / 100.0
        # C√°lculo do tempo de concentra√ß√£o (tc) em minutos, conforme f√≥rmula de Kirpich
        tc = 0.0078 * (L_m ** 0.77) / (S ** 0.385)
    else:
        st.info("Modelo selecionado ainda n√£o implementado. Utilize o modelo 'Kirpich' para este exemplo.")
        tc = None
    
    st.markdown("### Dados para o C√°lculo da Intensidade Pluviom√©trica M√°xima")
    a = st.number_input("Coeficiente a", value=1000.0, step=100.0)
    b = st.number_input("Coeficiente b", value=100.0, step=0.01)
    m = st.number_input("Expoente m", value=1.0, step=0.01)
    expoente_n = st.number_input("Expoente n", value=1.0, step=0.01)
    
    # Novos inputs para a equa√ß√£o de i_max e probabilidade
    T = st.number_input("Tempo de Retorno (anos)", min_value=1, max_value=1000, value=1, step=1)
    n_period = st.number_input("Per√≠odo de an√°lise (n anos)", min_value=1, max_value=T, value=1, step=1)
    
    st.markdown("### Coeficiente de Escoamento Superficial (C)")
    C = st.number_input("Insira o valor de C", value=0.7, step=0.01)
    
    st.markdown("### Dados da Bacia para o M√©todo Racional")
    # Reutiliza a √°rea j√° definida para a bacia (em km¬≤) ‚Äì converte para m¬≤
    area_km2_md = st.number_input("√Årea da Bacia (km¬≤)", min_value=0.001, value=10.0, step=0.001)
    area_m2 = area_km2_md * 1e6
    
    # Bot√£o de c√°lculo
    if st.button("Calcular"):
        if tc is None:
            st.error("Selecione um modelo de tempo de concentra√ß√£o implementado.")
        else:
            # Considera que o tempo de dura√ß√£o da chuva (td) √© igual ao tempo de concentra√ß√£o (tc)
            td = tc  
            # Nova equa√ß√£o da intensidade m√°xima: i_max = (a * T^m) / ((td - b)^n)
            try:
                i_max = (a * (T ** m)) / ((td - b) ** expoente_n)
            except Exception as e:
                st.error("Erro no c√°lculo da intensidade: verifique os valores inseridos.")
                i_max = None
            
            if i_max is not None:
                # C√°lculo da probabilidade de ocorr√™ncia do evento cr√≠tico em n_period anos:
                # P = 1/T; P_n = 1 - (1 - P)^n_period, expresso em %
                P = 1 / T
                P_n = 1 - ((1 - P) ** n_period)
                P_n_percent = P_n * 100
                
                # Vaz√£o m√°xima de projeto pelo M√©todo Racional: Q = C * i_max * A
                # Supondo que i_max esteja em mm/h, convertemos para m/s: 1 mm/h = 2.78e-7 m/s.
                i_max_ms = i_max * 2.78e-7
                Q = C * i_max_ms * area_m2  # Vaz√£o em m¬≥/s
                
                st.markdown("#### Resultados do Projeto")
                st.write(f"Tempo de Concentra√ß√£o (tc = td): **{tc:.2f} minutos**")
                st.write(f"Intensidade Pluviom√©trica M√°xima (i_max): **{i_max:.2f} mm/h**")
                st.write(f"Vaz√£o M√°xima de Projeto (Q): **{Q:.3f} m¬≥/s**")
                st.write(f"Probabilidade de ocorr√™ncia em {n_period} ano(s): **{P_n_percent:.2f}%**")
    
    # Bot√£o para gerar relat√≥rio Word da vaz√£o m√°xima e demais resultados
    if st.button("üìÑ Gerar Relat√≥rio Word - Vaz√£o M√°xima"):
        if tc is None or i_max is None:
            st.error("Realize o c√°lculo primeiro para gerar o relat√≥rio.")
        else:
            doc = Document()
    
            sec = doc.sections[0]
            sec.top_margin = Cm(2.0)
            sec.bottom_margin = Cm(2.0)
            sec.left_margin = Cm(2.5)
            sec.right_margin = Cm(2.5)
    
            titulo = doc.add_heading('Relat√≥rio - Vaz√£o M√°xima de Projeto', 0)
            titulo.alignment = WD_PARAGRAPH_ALIGNMENT.CENTER
            titulo.runs[0].font.size = Pt(16)
            titulo.runs[0].bold = True
            titulo.runs[0].font.name = 'Aptos'
    
            doc.add_paragraph()
    
            p_tc = doc.add_paragraph()
            run_tc = p_tc.add_run(f"Tempo de Concentra√ß√£o (tc = td): {tc:.2f} minutos")
            run_tc.font.size = Pt(11)
            run_tc.font.name = 'Aptos'
            p_tc.alignment = WD_PARAGRAPH_ALIGNMENT.LEFT
            p_tc.paragraph_format.space_after = Pt(6)
    
            p_i_max = doc.add_paragraph()
            run_i_max = p_i_max.add_run(f"Intensidade Pluviom√©trica M√°xima (i_max): {i_max:.2f} mm/h")
            run_i_max.font.size = Pt(11)
            run_i_max.font.name = 'Aptos'
            p_i_max.alignment = WD_PARAGRAPH_ALIGNMENT.LEFT
            p_i_max.paragraph_format.space_after = Pt(6)
    
            p_Q = doc.add_paragraph()
            run_Q = p_Q.add_run(f"Vaz√£o M√°xima de Projeto (Q): {Q:.3f} m¬≥/s")
            run_Q.font.size = Pt(11)
            run_Q.font.name = 'Aptos'
            p_Q.alignment = WD_PARAGRAPH_ALIGNMENT.LEFT
            p_Q.paragraph_format.space_after = Pt(6)
    
            p_prob = doc.add_paragraph()
            run_prob = p_prob.add_run(f"Probabilidade de ocorr√™ncia em {n_period} ano(s): {P_n_percent:.2f}%")
            run_prob.font.size = Pt(11)
            run_prob.font.name = 'Aptos'
            p_prob.alignment = WD_PARAGRAPH_ALIGNMENT.LEFT
            p_prob.paragraph_format.space_after = Pt(12)
    
            doc.save("relatorio_vazao_maxima.docx")
    
            with open("relatorio_vazao_maxima.docx", "rb") as f:
                st.download_button("‚¨áÔ∏è Baixar relat√≥rio", f, file_name="relatorio_vazao_maxima.docx")

